---
title: Assessing Model Accuracy (Linear Models)
author: Giuliano Sposito
date: '2018-01-09'
slug: []
categories:
  - data science
tags:
  - evaluation
  - model
  - rstats
subtitle: ''
lastmod: '2021-10-24T16:28:49-03:00'
authorLink: ''
description: ''
hiddenFromHomePage: no
hiddenFromSearch: no
featuredImage: 'images/green_flames_digital_art_lines.jpg'
featuredImagePreview: 'images/green_flames_digital_art_lines.jpg'
toc:
  enable: yes
math:
  enable: yes
lightgallery: no
license: ''
disqusIdentifier: rstatmodelaccuracy
---

This post talks about the use of **Mean Squared Error (MSE)** against the flexibility of a function fitted as a technique to assess the model accuracy in a specific problem as describe in the [An Introduction to Statistical Learning in R](https://www.amazon.com/Introduction-Statistical-Learning-Applications-Statistics/dp/1461471370) book.

<!--more-->

## Measure the quality of fit (regression)

In order to evaluate the performance of a statistical learning method on a given data set, we need some way to measure how well its predictions actually match the observed data. That is, we need to quantify the extent to which the predicted response value for a given observation is close to the true response value for that observation. 

In the **regression setting**, the most commonly-used measure is the mean squared error (MSE), given by:

$$ MSE = \frac{1}{N}\sum_{i=1}^{n}(y_i-\hat{f}(x_i))^2 $$ 

Where $ \hat{f}(x_i) $ is the predicted (or fitted) function at $ x_i $ and $ y_i $ is the real value.

So, the MSE is computed using the training data that was used to fit the model, and so should more accurately be referred to as the training MSE, but we want to evaluate the performance of the  $ \hat{f}() $ against the unknown data points, so we also compute MSE in an _test set_ with data points different from used to fit the $ \hat{f}() $, now we have a $ MSE_{tr} $ for training points and a $ MSE_{ts} $ for test set.

We want to choose the method that gives the lowest test MSE, as opposed to the lowest training MSE ($ MSE_{ts} $).

## Comparing $ MSE_{tr} $ and $ MSE_{ts} $

Let's simulate some situations to see how $ MSE_{tr} $ and $ MSE_{ts} $ against different fitting techniques, we'll use polynomials fit to simplify the scenarios.

### Curve 1


```r
# setup
library(ggplot2)
library(tidyverse)
library(reshape2)

set.seed(42)
```




















